name: Continuous Integration

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  schedule:
    - cron: "5 6 * * *"
  repository_dispatch:
    types: [ liquibase-ci ]
  push:
    branches:
      - main

jobs:
  build:
    name: Build & Package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'

      - name: Install liquibase-core 0-SNAPSHOT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn -B clean liquibase-sdk:install-snapshot -Dliquibase.sdk.branchSearch=MATCHING_BRANCHES,master

      - name: Build and Package
        run: mvn -B dependency:go-offline clean package -DskipTests=true

      - name: Save Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: liquibase-redshift-artifacts
          path: |
            target/*.jar

      - name: Save Event File
        uses: actions/upload-artifact@v3
        with:
          name: Event File
          path: ${{ github.event_path }}

      - name: Build Cache
        uses: actions/cache@v3.0.5
        with:
          key: build-${{ github.run_number }}-${{ github.run_attempt }}
          path: |
            **/target/**
            ~/.m2/repository/org/liquibase/

  unit-test:
    name: Test Java ${{ matrix.java }}
    runs-on: ubuntu-latest
    needs: build

    strategy:
      fail-fast: false
      matrix:
        java: [ 8, 11, 17, 18 ]

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Build Cache
        uses: actions/cache@v3.0.5
        with:
          key: build-${{ github.run_number }}-${{ github.run_attempt }}
          path: |
            **/target/**
            ~/.m2/repository/org/liquibase/

      - name: Run Tests
        run: mvn -B jacoco:prepare-agent surefire:test -Dtest="RedshiftDatabaseTest" -DfailIfNoTests=true

      - name: Archive Test Results
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: test-reports-jdk-${{ matrix.java }}
          path: |
            **/target/surefire-reports
            **/target/jacoco.exec

  integration-test:
    name: Test Harness for Redshift ${{ matrix.redshift }}
    needs: build
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        redshift: [ "" ]

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'

      - name: Build Cache
        uses: actions/cache@v3.0.5
        with:
          key: build-${{ github.run_number }}-${{ github.run_attempt }}
          path: |
            **/target/**
            ~/.m2/repository/org/liquibase/

#      - name: Run Tests
#        run: mvn -B jacoco:prepare-agent surefire:test -Dredshift.version=${{ matrix.redshift }}

      - name: Advanced Harness Test Run
        env:
          LIQUIBASE_PRO_LICENSE_KEY: ${{ secrets.PRO_LICENSE_KEY }}
        run: mvn -Dtest="LiquibaseHarnessFoundationalSuiteTest" -DdbName=redshift -DdbUsername=${{secrets.TH_DB_ADMIN}} -DdbPassword=${{secrets.TH_DB_PASSWD}} -DdbUrl=${{secrets.TH_REDSHIFTURL}} test

      - name: Archive Test Results
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: test-reports-redshift-${{ matrix.redshift }}
          path: |
            **/target/surefire-reports
            **/target/jacoco.exec

